{"version":3,"sources":["ListItems.js","App.js","serviceWorker.js","index.js"],"names":["ListItems","props","items","completedItems","activeItems","listItems","map","item","itemClass","status","console","log","react_default","a","createElement","className","key","CheckCircle_default","onClick","completeItem","icon","type","id","value","text","onChange","e","setUpdate","target","index_es","deleteItem","completedList","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","completedItemsCreation","changeWhatToView","stop","activeList","_callee2","_context2","activeItemsCreation","whatToView","react_flip_move_es","duration","easing","style","paddingLeft","Button","variant","color","library","add","faTrash","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentItem","addItem","bind","assertThisInitialized","handleInput","isCompleted","preventDefault","newItem","concat","toConsumableArray","setState","Date","now","filteredItems","filter","some","updatedItems","whatToView1","onSubmit","placeholder","src_ListItems","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.467504a8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ListItems.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    const completedItems = props.completedItems;\r\n    const activeItems = props.activeItems;\r\n\r\n    const listItems = items.map(item =>\r\n        \r\n   { \r\n       var itemClass = \" \" + ( item.status ? \"done\" : \"undone\");\r\n        console.log(itemClass)\r\n       return <div className=\"list\" key={item.key}>\r\n     <p>\r\n     <CheckCircleIcon className={\"faicon\"} onClick={() => {\r\n            props.completeItem(item.key)\r\n        }} icon=\"trash\" />\r\n        \r\n         <input type=\"text\" className={itemClass} id={item.key} value={item.text} onChange={(e)=>{\r\n             props.setUpdate(e.target.value,item.key)}}/>\r\n        <span>\r\n       \r\n        <FontAwesomeIcon className=\"faicons\" onClick={() => {\r\n            props.deleteItem(item.key)\r\n            \r\n        }} icon=\"trash\" />\r\n        </span>\r\n     </p>\r\n     \r\n    </div>})\r\n    const completedList = completedItems.map(item =>\r\n        \r\n        { \r\n            var itemClass = \" \" + ( item.status ? \"done\" : \"undone\");\r\n             console.log(itemClass)\r\n            return <div className=\"list\" key={item.key}>\r\n          <p>\r\n          <CheckCircleIcon className={\"faicon\"} onClick={() => {\r\n                 props.completeItem(item.key)\r\n             }} icon=\"trash\" />\r\n             \r\n              <input type=\"text\" className={itemClass} id={item.key} value={item.text} onChange={(e)=>{\r\n                  props.setUpdate(e.target.value,item.key)}}/>\r\n             <span>\r\n            \r\n             <FontAwesomeIcon className=\"faicons\" onClick={async() => {\r\n                 await props.deleteItem(item.key)\r\n                 await props.completedItemsCreation();\r\n                 props.changeWhatToView('completed');\r\n             }} icon=\"trash\" />\r\n             </span>\r\n          </p>\r\n          \r\n         </div>})\r\n    const activeList = activeItems.map(item =>\r\n        \r\n        { \r\n            var itemClass = \" \" + ( item.status ? \"done\" : \"undone\");\r\n             console.log(itemClass)\r\n            return <div className=\"list\" key={item.key}>\r\n          <p>\r\n          <CheckCircleIcon className={\"faicon\"} onClick={() => {\r\n                 props.completeItem(item.key)\r\n             }} icon=\"trash\" />\r\n             \r\n              <input type=\"text\" className={itemClass} id={item.key} value={item.text} onChange={(e)=>{\r\n                  props.setUpdate(e.target.value,item.key)}}/>\r\n             <span>\r\n            \r\n             <FontAwesomeIcon className=\"faicons\" onClick={async () => {\r\n                await props.deleteItem(item.key)\r\n                await props.activeItemsCreation();\r\n                await props.changeWhatToView('active');\r\n                 \r\n             }} icon=\"trash\" />\r\n             </span>\r\n          </p>\r\n          \r\n         </div>})\r\n         console.log(props.whatToView)\r\n    if (props.whatToView === ''){\r\n        return (\r\n        \r\n            <div \r\n            \r\n        >\r\n                <FlipMove duration={300} easing=\"ease-in-out\">\r\n                {listItems}\r\n                </FlipMove>\r\n                <div style={{paddingLeft: 60 }}>\r\n                <Button variant=\"contained\" color=\"primary\" className=\"faicons2\" onClick={(e) => {\r\n                    props.changeWhatToView('');\r\n            }} icon=\"trash\" >All</Button>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"faicons2\" onClick={() => {\r\n                props.activeItemsCreation();\r\n                props.changeWhatToView('active');\r\n            }} icon=\"trash\" >Active</Button>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"faicons2\" onClick={() => {\r\n                props.completedItemsCreation();\r\n                props.changeWhatToView('completed');\r\n            }} icon=\"trash\" >Completed</Button>\r\n            </div>\r\n            </div>\r\n)\r\n        }\r\n        if(props.whatToView === 'active'){\r\n            return (\r\n        \r\n                <div>\r\n                <FlipMove duration={300} easing=\"ease-in-out\">\r\n                {activeList}\r\n                </FlipMove>\r\n                <div style={{paddingLeft: 60 }}>\r\n                <Button variant=\"contained\" color=\"primary\" className=\"faicons2\" onClick={(e) => {\r\n                    props.changeWhatToView('');\r\n            }} icon=\"trash\" >All</Button>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"faicons2\" onClick={() => {\r\n                props.activeItemsCreation();\r\n                props.changeWhatToView('active');\r\n            }} icon=\"trash\" >Active</Button>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"faicons2\" onClick={() => {\r\n                props.completedItemsCreation();\r\n                props.changeWhatToView('completed');\r\n            }} icon=\"trash\" >Completed</Button>\r\n            </div>\r\n            </div>\r\n                )\r\n        }\r\n        if(props.whatToView === 'completed'){\r\n            return (\r\n                <div>\r\n                <FlipMove duration={300} easing=\"ease-in-out\">\r\n                {completedList}\r\n                </FlipMove>\r\n                <div style={{paddingLeft: 60 }}>\r\n                <Button variant=\"contained\" color=\"primary\" className=\"faicons2\" onClick={(e) => {\r\n                    props.changeWhatToView('');\r\n            }} icon=\"trash\" >All</Button>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"faicons2\" onClick={() => {\r\n                props.activeItemsCreation();\r\n                props.changeWhatToView('active');\r\n            }} icon=\"trash\" >Active</Button>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"faicons2\" onClick={() => {\r\n                props.completedItemsCreation();\r\n                props.changeWhatToView('completed');\r\n            }} icon=\"trash\" >Completed</Button>\r\n            </div>\r\n            </div>\r\n                )\r\n        }\r\n\r\n        \r\n  }\r\n\r\n  export default ListItems;","import React from 'react';\nimport './App.css';\nimport ListItems from './ListItems'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faTrash)\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      items:[],\n      currentItem:{\n        text:'',\n        key:'',\n        status:false\n      },\n      completedItems:[],\n      activeItems: [],\n      whatToView: ''\n    }\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n    this.completeItem = this.completeItem.bind(this);\n    this.isCompleted = this.isCompleted.bind(this);\n    this.activeItemsCreation = this.activeItemsCreation.bind(this);\n    this.completedItemsCreation = this.completedItemsCreation.bind(this);\n    this.changeWhatToView = this.changeWhatToView.bind(this);\n   }\n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if(newItem.text !==\"\"){\n      console.log([this.state.items.newItem])\n      const items = [...this.state.items, newItem];\n    this.setState({\n      items: items,\n      currentItem:{\n        text:'',\n        key:'',\n        status: false\n      },\n    })\n    }\n  }\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key: Date.now(),\n        status: false\n      }\n    })\n  }\n  deleteItem(key){\n    const filteredItems= this.state.items.filter(item =>\n      item.key!==key);\n    this.setState({\n      items: filteredItems\n    })\n  }\n  isCompleted(key){\n    console.log(\"is completed ?\")\n    var some = this.state.items.filter(item =>\n      key === item.key\n    ) \n    console.log(some[0].status)\n    return some.status\n    }\n  completeItem(key) {\n    var updatedItems = this.state.items.map(item => {\n      if (key === item.key)\n        item.status = !item.status;\n        console.log(\"comimg inside\")\n      return item;\n    });\n    \n    // State Updates are Merged\n    this.setState({\n      items: [].concat(updatedItems)\n    });\n  }\n  completedItemsCreation(e){\n    let completedItems = this.state.items.filter(item =>  \n      item.status === true)\n      console.log(completedItems)\n      console.log(this.state.completedItems)\n      this.setState({\n        completedItems :completedItems\n      })\n      console.log(completedItems)\n  }\n  activeItemsCreation(e){\n    let activeItems = this.state.items.filter(item=>\n      item.status ===false)\n      console.log(activeItems)\n      console.log(\"coming inside\"+ activeItems  )\n    this.setState({\n      activeItems: activeItems\n    })\n\n  }\n  setUpdate(text,key){\n    console.log(\"items:\"+this.state.items);\n    const items = this.state.items;\n    items.map(item=>{      \n      if(item.key===key){\n        console.log(item.key +\"    \"+key)\n        item.text= text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n  changeWhatToView(whatToView){\n    console.log(whatToView)\n    console.log('coming ti change what to view')\n    const whatToView1 = whatToView\n     this.setState ({\n      whatToView : whatToView1\n    }) \n    console.log(\"changed  view\" + this.state.whatToView + 'view printed')\n  }\n render(){\n  return (\n    <div className=\"App\">\n      <header>\n        <form id=\"to-do-form\" onSubmit={this.addItem}>\n          <input type=\"text\" placeholder=\"Enter task\" value= {this.state.currentItem.text} onChange={this.handleInput}></input>\n          <button type=\"submit\">Add</button>\n        </form>\n        \n          <ListItems items={this.state.items} whatToView= {this.state.whatToView} changeWhatToView={this.changeWhatToView} activeItems = {this.state.activeItems} completedItems={this.state.completedItems} activeItemsCreation = {this.activeItemsCreation} completedItemsCreation={this.completedItemsCreation} isCompleted={this.isCompleted} completeItem={this.completeItem} deleteItem={this.deleteItem} setUpdate={this.setUpdate}/>\n        \n      </header>\n    </div>\n  );\n }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}