{"ast":null,"code":"var _jsxFileName = \"/home/maddy/Desktop/To-Do/src/ListItems.js\";\nimport React from 'react';\nimport './ListItems.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FlipMove from 'react-flip-move';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { Button, Grid } from '@material-ui/core';\n\nfunction ListItems(props) {\n  const items = props.items;\n  const completedItems = props.completedItems;\n  const activeItems = props.activeItems;\n  const listItems = items.map(item => {\n    var itemClass = \" \" + (item.status ? \"done\" : \"undone\");\n    console.log(itemClass);\n    return React.createElement(\"div\", {\n      className: \"list\",\n      key: item.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(CheckCircleIcon, {\n      className: \"faicon\",\n      onClick: () => {\n        props.completeItem(item.key);\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: itemClass,\n      id: item.key,\n      value: item.text,\n      onChange: e => {\n        props.setUpdate(e.target.value, item.key);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"faicons\",\n      onClick: () => {\n        props.deleteItem(item.key);\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))));\n  });\n  const completedList = completedItems.map(item => {\n    var itemClass = \" \" + (item.status ? \"done\" : \"undone\");\n    console.log(itemClass);\n    return React.createElement(\"div\", {\n      className: \"list\",\n      key: item.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(CheckCircleIcon, {\n      className: \"faicon\",\n      onClick: () => {\n        props.completeItem(item.key);\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: itemClass,\n      id: item.key,\n      value: item.text,\n      onChange: e => {\n        props.setUpdate(e.target.value, item.key);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"faicons\",\n      onClick: async () => {\n        await props.deleteItem(item.key);\n        await props.completedItemsCreation();\n        await props.changeWhatToView('completed');\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))));\n  });\n  const activeList = activeItems.map(item => {\n    var itemClass = \" \" + (item.status ? \"done\" : \"undone\");\n    console.log(itemClass);\n    return React.createElement(\"div\", {\n      className: \"list\",\n      key: item.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(CheckCircleIcon, {\n      className: \"faicon\",\n      onClick: () => {\n        props.completeItem(item.key);\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: itemClass,\n      id: item.key,\n      value: item.text,\n      onChange: e => {\n        props.setUpdate(e.target.value, item.key);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"faicons\",\n      onClick: async () => {\n        await props.deleteItem(item.key);\n        await props.activeItemsCreation();\n        await props.changeWhatToView('active');\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))));\n  });\n  console.log(props.whatToView);\n\n  if (props.whatToView === '') {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(FlipMove, {\n      duration: 300,\n      easing: \"ease-in-out\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, listItems), React.createElement(Grid, {\n      container: true,\n      spacing: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"faicons\",\n      onClick: e => {\n        props.changeWhatToView('');\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"All\")), React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"faicons\",\n      onClick: () => {\n        props.activeItemsCreation();\n        props.changeWhatToView('active');\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Active\")), React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"faicons\",\n      onClick: () => {\n        props.completedItemsCreation();\n        props.changeWhatToView('completed');\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Completed\")));\n  }\n\n  if (props.whatToView === 'active') {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(FlipMove, {\n      duration: 300,\n      easing: \"ease-in-out\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, activeList), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"faicons\",\n      onClick: e => {\n        props.changeWhatToView('');\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"All\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"faicons\",\n      onClick: () => {\n        props.activeItemsCreation();\n        props.changeWhatToView('active');\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Active\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"faicons\",\n      onClick: () => {\n        props.completedItemsCreation();\n        props.changeWhatToView('completed');\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Completed\"));\n  }\n\n  if (props.whatToView === 'completed') {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(FlipMove, {\n      duration: 300,\n      easing: \"ease-in-out\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, completedList), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"faicons\",\n      onClick: e => {\n        props.changeWhatToView('');\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"All\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"faicons\",\n      onClick: () => {\n        props.activeItemsCreation();\n        props.changeWhatToView('active');\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Active\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"faicons\",\n      onClick: () => {\n        props.completedItemsCreation();\n        props.changeWhatToView('completed');\n      },\n      icon: \"trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Completed\"));\n  }\n}\n\nexport default ListItems;","map":{"version":3,"sources":["/home/maddy/Desktop/To-Do/src/ListItems.js"],"names":["React","FontAwesomeIcon","FlipMove","CheckCircleIcon","Button","Grid","ListItems","props","items","completedItems","activeItems","listItems","map","item","itemClass","status","console","log","key","completeItem","text","e","setUpdate","target","value","deleteItem","completedList","completedItemsCreation","changeWhatToView","activeList","activeItemsCreation","whatToView"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './ListItems.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { Button, Grid } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    const completedItems = props.completedItems;\r\n    const activeItems = props.activeItems;\r\n\r\n    const listItems = items.map(item =>\r\n        \r\n   { \r\n       var itemClass = \" \" + ( item.status ? \"done\" : \"undone\");\r\n        console.log(itemClass)\r\n       return <div className=\"list\" key={item.key}>\r\n     <p>\r\n     <CheckCircleIcon className={\"faicon\"} onClick={() => {\r\n            props.completeItem(item.key)\r\n        }} icon=\"trash\" />\r\n        \r\n         <input type=\"text\" className={itemClass} id={item.key} value={item.text} onChange={(e)=>{\r\n             props.setUpdate(e.target.value,item.key)}}/>\r\n        <span>\r\n       \r\n        <FontAwesomeIcon className=\"faicons\" onClick={() => {\r\n            props.deleteItem(item.key)\r\n            \r\n        }} icon=\"trash\" />\r\n        </span>\r\n     </p>\r\n     \r\n    </div>})\r\n    const completedList = completedItems.map(item =>\r\n        \r\n        { \r\n            var itemClass = \" \" + ( item.status ? \"done\" : \"undone\");\r\n             console.log(itemClass)\r\n            return <div className=\"list\" key={item.key}>\r\n          <p>\r\n          <CheckCircleIcon className={\"faicon\"} onClick={() => {\r\n                 props.completeItem(item.key)\r\n             }} icon=\"trash\" />\r\n             \r\n              <input type=\"text\" className={itemClass} id={item.key} value={item.text} onChange={(e)=>{\r\n                  props.setUpdate(e.target.value,item.key)}}/>\r\n             <span>\r\n            \r\n             <FontAwesomeIcon className=\"faicons\" onClick={async() => {\r\n                 await props.deleteItem(item.key)\r\n                 await props.completedItemsCreation();\r\n                await props.changeWhatToView('completed');\r\n             }} icon=\"trash\" />\r\n             </span>\r\n          </p>\r\n          \r\n         </div>})\r\n    const activeList = activeItems.map(item =>\r\n        \r\n        { \r\n            var itemClass = \" \" + ( item.status ? \"done\" : \"undone\");\r\n             console.log(itemClass)\r\n            return <div className=\"list\" key={item.key}>\r\n          <p>\r\n          <CheckCircleIcon className={\"faicon\"} onClick={() => {\r\n                 props.completeItem(item.key)\r\n             }} icon=\"trash\" />\r\n             \r\n              <input type=\"text\" className={itemClass} id={item.key} value={item.text} onChange={(e)=>{\r\n                  props.setUpdate(e.target.value,item.key)}}/>\r\n             <span>\r\n            \r\n             <FontAwesomeIcon className=\"faicons\" onClick={async () => {\r\n                await props.deleteItem(item.key)\r\n                await props.activeItemsCreation();\r\n                await props.changeWhatToView('active');\r\n                 \r\n             }} icon=\"trash\" />\r\n             </span>\r\n          </p>\r\n          \r\n         </div>})\r\n         console.log(props.whatToView)\r\n    if (props.whatToView === ''){\r\n        return (\r\n        \r\n            <div>\r\n                <FlipMove duration={300} easing=\"ease-in-out\">\r\n                {listItems}\r\n                </FlipMove>\r\n                <Grid container spacing={12}>\r\n                    <Grid item xs ={4}>\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"faicons\" onClick={(e) => {\r\n                        props.changeWhatToView('');\r\n                }} icon=\"trash\" >All</Button>\r\n                </Grid>\r\n                <Grid container spacing={2}>         \r\n            <Button variant=\"contained\" color=\"primary\" className=\"faicons\" onClick={() => {\r\n                props.activeItemsCreation();\r\n                props.changeWhatToView('active');\r\n            }} icon=\"trash\" >Active</Button>\r\n            </Grid>\r\n            <Grid container spacing={2}></Grid>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"faicons\" onClick={() => {\r\n                props.completedItemsCreation();\r\n                props.changeWhatToView('completed');\r\n            }} icon=\"trash\" >Completed</Button>\r\n            </Grid>\r\n            </div>\r\n)\r\n        }\r\n        if(props.whatToView === 'active'){\r\n            return (\r\n                <div>\r\n                <FlipMove duration={300} easing=\"ease-in-out\">\r\n                {activeList}\r\n                </FlipMove>\r\n                <Button variant=\"contained\" color=\"primary\" className=\"faicons\" onClick={(e) => {\r\n                    props.changeWhatToView('');\r\n            }} icon=\"trash\" >All</Button>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"faicons\" onClick={() => {\r\n                props.activeItemsCreation();\r\n                props.changeWhatToView('active');\r\n            }} icon=\"trash\" >Active</Button>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"faicons\" onClick={() => {\r\n                props.completedItemsCreation();\r\n                props.changeWhatToView('completed');\r\n            }} icon=\"trash\" >Completed</Button>\r\n            </div>\r\n                )\r\n        }\r\n        if(props.whatToView === 'completed'){\r\n            return (\r\n                <div>\r\n                <FlipMove duration={300} easing=\"ease-in-out\">\r\n                {completedList}\r\n                </FlipMove>\r\n                <Button variant=\"contained\" color=\"primary\" className=\"faicons\" onClick={(e) => {\r\n                    props.changeWhatToView('');\r\n            }} icon=\"trash\" >All</Button>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"faicons\" onClick={() => {\r\n                props.activeItemsCreation();\r\n                props.changeWhatToView('active');\r\n            }} icon=\"trash\" >Active</Button>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"faicons\" onClick={() => {\r\n                props.completedItemsCreation();\r\n                props.changeWhatToView('completed');\r\n            }} icon=\"trash\" >Completed</Button>\r\n            </div>\r\n                )\r\n        }\r\n\r\n        \r\n  }\r\n\r\n  export default ListItems;"]},"metadata":{},"sourceType":"module"}